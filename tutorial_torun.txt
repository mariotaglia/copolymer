
##              INPUTS               ##

File name: DEFINITIONS.txt
Description: see example in main directory. Mandatory.

File name: kais.001.001.dat kais.001.002.dat etc
Description: geometric dependency of 1-1 interactions, 1-2 interactions, etc.
Depends on curvature, dimR, dimRini, minntotR, maxntotR, Xulimit, dimf and MCsteps. 
If any of those parameteres changes, it has to be recalculated. Mandatory if flagkai is 0.
Header should contain the value of the following parameters in this specific
order:
 #curvature dimR dimRini minntotR maxntotR Xulimit dimf factorMCsteps#
     0       100    0        1       25       5     6.0       60



File name: fort.100 
Description: initial guess for solvent volume fraction. Mandatory if infile is 1.

File name: fort.101 fort.102 etc
Description: initial guess for volume fraction of bead 1, 2, etc. If Ncomp > 1,
fort.101 is the sum of the volume fraction of bead 1 from all the compounds.
Mandatory if infile is 1.

File name: fort.200
Description: initial guess for electrostatic potential. Should be added if
infile is 1.

File name: in.in
Description: contains all the information of fort.* files if copied from the
output file out.XXX.XXX.dat. Must be added if infile is 2.

File: epsilon.in
Description: matrix with inter bead interaction parameters. It can be generated
automatically by the martini_to_theory python script from martini parameters.
Mandatory.

Example: 

"2.1604414403 4.32088288061 4.32088288061 5.18505945673
4.32088288061 6.48132432091 4.32088288061 7.34550089703
4.32088288061 4.32088288061 6.48132432091 9.50594233733
5.18505945673 7.34550089703 9.50594233733 19.4439729627
0: W    1: PEO  2: Gly  3: Ala  4: Tail"

File name: structure.001.in structure.002.in etc
Description: these files indicate the structure of compounds 1, 2, etc. The
file contains three columns. Each line of the file indicates poorsv type,
acid type and basic type. The number of lines must coincide with long. 
Branches go at the end ordered as in DEFINITIONS.txt 
(see example in main directory). Mandatory.

Example (long=8, npoorsv=2, Nacids=1, Nbasics=0):

1	0	0	
1	0	0	
1	0	0	
1	0	0	
2	0	0	
2	0	0	
0	0	0	
0	1	0	

If flagtorsionstate =/= 0, a fourth column must be added to indicate torsion
state of each segment.
Torsion states (4th column): 0 = trans. 1 = gauche+. 2 = gauche-. 3 = random.
Example:

1	0	0	3
1	0	0	3
1	0	0	3
1	0	0	3
2	0	0	1
2	0	0	1
0	0	0	1
0	1	0	3


##            OUTPUTS             ##

File name: system.#FLAG.#COUNTER.dat
Description: system data. #FLAG indicates increasing npol (#FLAG=001) or 
decreasing npol (#002) and #COUNTER is the case counter.

File name: densityacid#NC.#ATYPE.#FLAG.#COUNTER.dat densitybasi#NC.#BTYPE.#FLAG.#COUNTER.dat
Description: volume fraction of beads with acid type #ATYPE and with basic
type #BTYPE that are part of compound #NC.

File name: densitypolymer#NC.#PTYPE.#FLAG.#COUNTER.dat
Description: volume fraction of beads with poorsv type #PTYPE that are part of
compound #NC.

File name: densitytotalpo#PTYPE.#FLAG.#COUNTER.dat (fort.101 fort.102 etc)
Description: total volume fraction of beads with poorsv type #PTYPE 

File name: xdensitytota.#NC.#FLAG.#COUNTER.dat 
Description: number density of compound #NC.

File name: densityHplus.#FLAG.#COUNTER.dat, densityOHmin.#FLAG.#COUNTER.dat,
densitynegative.#FLAG.#COUNTER.dat, densitypositive.#FLAG.#COUNTER.dat,
densitysolvent..#FLAG.#COUNTER.dat (fort.100)
Description: volume fraction of H+, OH-, anion, cation and solvent.

File name: electricpotential.#FLAG.#COUNTER.dat (fort.200) dielectric_cons.#FLAG.#COUNTER.dat
Description: electric potential and dielectric constant (relative to water: 78.54) 

File name: fractionAmin#ATYPE.#FLAG.#COUNTER.dat fractionBHpl#BTYPE.#FLAG.#COUNTER.dat 
Description: fraction of acids beads of type #ATYPE and basic beads of type
#BTYPE that are charged.

File name: chemical_potent.#NC.#FLAG.#COUNTER.dat lnq.#NC.dat
Description: chemical potential of compound #NC as a function of R and z, and
as a function of npol. 

File name: ntrans#NC.#FLAG.#COUNTER.dat 
Description: average trans configuration as a function of bead number for
compound #NC.

File name: rog.#NC.dat
Description: radius of gyration of compound #NC. In the file the first lines
are the radius of gyration of each poorsv type (in case of needing the rog of
parts of the chain) and the last line is the rog of the full chain.

File name: F_tot.dat and F_tot2.dat
Description: Excess semi grand canonical potential as a function of npol (see
free_energy.f90).

File name: F_conf.dat F_electro.dat etc
Description: Different contributions to the excess semi grand canonical
potential as a function of npol (see free_energy.f90).

### INPUTS FROM MD ###
27-12-2023


1. Generacion de inputs:

1. Pasar el formato XX.mol a XX.pdb con AVOGADRO
2. pasar pdb a mol2: antechamber -i XX.pdb -fi pdb -o XX.mol2 -fo mol2 
3. da parametros:  parmchk2 -i XX.mol2 -f mol2 -o XX.prm -a 'Y' 
4. antechamber -i XX.mol2 -fi mol2 -o XX-fin.pdb -fo pdb
5. antechamber -i XX.mol2 -fi mol2 -o XX-fin.prepi -fo prepi
6. tleap script "tleap.in" 
     source leaprc.gaff2
     loadAmberParams XX.prm
     loadamberprep XX-fin.prepi
     c16 = loadpdb XX-fin.pdb
     saveamberparm c16 XX.prmtop XX.rst7
     quit
7.# Correr tleap
tleap -f tleap.in 
8. se necesita el archivo XX.rst7 y XX.prmtop y correr convert.py. Para poder hacer esto, se requiere:
	a. tener instalado ambertool
        b. tener instalado parmed (pip install parmed)
   se corre con python3.9

   esto genera el .crd y top.

9. Para armar el data para lammps: correr amber2lammps.py  que necesita XX.crd  XX.prmtop y XX.top
	modificar antes de los archivos:
          a. crd: 4 lineas vacias iniciales y en la 5 SOLO el numero de atomos
          b. .prmtop  : borrar las primeras 6 lineas que compienzan con  %. Y poner una linea con XX

     ejecutar con python2 (kMC environment)


2. Implementacion en MOLT:

(ver ejemplo)

Es necesario: 

1. DEFINITIONS: flagkai = 1, cambiar long, branches no tiene efecto

2. structure.in: se estructura diferente, por tiempo de segmentos, por ejemplo:

8
1       1       1       0       0
2       0       0       0       0
3       1       1       0       0
4       1       2       0       0
5       1       2       0       0
6       0       0       0       0
7       0       0       0       0
8       1       3       0       1

#       H?=0    poorsv  acid    base


3. Si fuese necesario, revisar MD.001.in y reemplazar tipos de segmento por otro (en el caso de C16Kx, se reemplaza los N de las aminas, 5->8). Usar script replace.sh







